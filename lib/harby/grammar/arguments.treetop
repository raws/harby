module Harby
	module Grammar
		grammar Arguments
			include Numeric
			include Regex
			include String
			
			rule arguments
				first_arg:argument rest_args:(" "+ arg:argument)* {
					def args
						[first_arg] + rest_args
					end
					
					def parsed_args
						@parsed_args ||= args.map { |arg| arg.parsed_value }
					end
					
					def rest_args
						super.elements.map { |space_and_arg| space_and_arg.arg }
					end
				}
			end
			
			rule argument
				command / numeric / regex / string
			end
			
			rule command
				"[" arguments:arguments "]" {
					def args
						arguments.parsed_args
					end
					
					def name
						args.first
					end
					
					def parsed_args
						args[1..-1]
					end
					
					def parsed_value
						if delegate.respond_to?(:on_command)
							delegate.on_command(name, parsed_args)
						else
							""
						end
					end
				}
			end
		end
	end
end
